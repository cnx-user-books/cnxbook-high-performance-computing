<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Exercises</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m33718</md:content-id>
  <md:title>Exercises</md:title>
  <md:abstract/>
  <md:uuid>114a7db9-fb84-40d9-a840-d2e2b2105731</md:uuid>
</metadata>

<content>
      <exercise id="id1171484599374"><problem id="oo-id1171484641622">
          <para id="id1171482558985">Profile the following program using gprof. Is there any way to tell how much of the time spent in routine c was due to recursive calls?</para>
<code id="eip-id1171859161647" display="block">
<newline/>
      main()
      {
          int i, n=10;
          for (i=0; i&lt;1000; i++) {
              c(n);
              a(n);
          }
      }
      c(n)
      int n;
      {
          if (n &gt; 0) { 
              a(n-1); 
              c(n-1);
          }
      }
      a(n)
      int n;
      {
          c(n);
      }
    </code>

        </problem>
      </exercise>
      
      <exercise id="id1171483450729">
        <problem id="oo-id1171483444664">
          <para id="id1171483450732">Profile an engineering code (floating-point intensive) with full optimization on and off. How does the profile change? Can you explain the change?</para>
        </problem>
      </exercise>
      <exercise id="id1171484596002">
        <problem id="oo-id1171482283351">
          <para id="id1171484644109">Write a program to determine the overhead of the getrusage and the etime calls. Other than consuming processor time, how can making a system call to check the time too often alter the application performance?</para>
        </problem>
      </exercise>
  </content>
</document>